name: Application CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  NODE_VERSION: 16.17.0
  SPRING_OUTPUT_ANSI_ENABLED: DETECT
  SPRING_JPA_SHOW_SQL: false
  JHI_DISABLE_WEBPACK_LOGS: true
  NG_CLI_ANALYTICS: false
  TAG: ${{ github.run_number }}
jobs:
  validation:
    name: 'Gradle Wrapper Validation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
  test:
    name: testing test
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Install node.js packages
        run: npm install
      - name: Run backend test
        run: |
          chmod +x gradlew
          npm run ci:backend:test
      - name: Run frontend test
        run: npm run ci:frontend:test

  deliver:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Maven Package
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Permissions to mvnw
        run: chmod +x gradlew
      - name: Build and package the application
        run: ./gradlew jib -Pprod -Djib.to.image=${{ secrets.CONTAINER_REGISTRY }}/${{ secrets.IMAGE_REPOSITORY }}:${{ env.TAG }}

  deploy:
    needs: deliver
    runs-on: ubuntu-latest
    steps:
      - name: Login Azure
        uses: azure/login@v1
        with:
          auth-type: PUBLISH_PROFILE
          publish-profile: ${{ secrets.CREDS_AZURE_APP }}
      - name: Azure Web App on Container Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          images: ${{ secrets.CONTAINER_REGISTRY }}/${{ secrets.IMAGE_REPOSITORY }}:${{ env.TAG }}
      - name: Azure logout
        run: az logout
